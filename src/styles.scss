// ====================================
// MAIN STYLES - WATCHER FRONT
// ====================================

// Import theme files in correct order
@import 'assets/styles/variables';
@import 'assets/styles/mixins';
@import 'assets/styles/base';
@import 'assets/styles/components';
@import 'assets/styles/forms';  
@import 'assets/styles/utilities';
@import 'assets/styles/material-overrides';

// ====================================
// THEME DOCUMENTATION
// ====================================

/*
THEME STRUCTURE:

1. _variables.scss - CSS custom properties and SCSS variables
   - Color palette with CSS custom properties
   - Dark theme support
   - Typography, spacing, shadows, transitions
   - Backward compatibility with SCSS variables

2. _mixins.scss - Reusable SCSS mixins
   - Button mixins (primary, secondary, outline)
   - Card mixins (base, hover, interactive)
   - Badge mixins
   - Typography mixins
   - Layout mixins (container, flex utilities)
   - Responsive mixins
   - Animation mixins

3. _base.scss - Base styles and resets
   - CSS reset and normalization
   - Typography base styles
   - Form elements
   - Global utilities

4. _components.scss - Component-specific styles
   - Angular Material overrides
   - Custom components (badges, star rating, spinner, etc.)
   - Alert, progress bar, tooltip components

5. _utilities.scss - Utility classes
   - Color utilities
   - Spacing utilities (margin, padding)
   - Typography utilities
   - Flexbox and grid utilities
   - Layout utilities

USAGE EXAMPLES:

Buttons:
<button mat-raised-button color="primary">Primary Button</button>
<button mat-raised-button color="accent">Secondary Button</button>
<button mat-outlined-button color="primary">Outline Button</button>

Cards:
<mat-card class="interactive">
  <mat-card-header>
    <mat-card-title>Card Title</mat-card-title>
    <mat-card-subtitle>Card Subtitle</mat-card-subtitle>
  </mat-card-header>
  <mat-card-content>Card content</mat-card-content>
  <mat-card-actions>
    <button mat-button>Action</button>
  </mat-card-actions>
</mat-card>

Badges:
<span class="difficulty-badge beginner">Beginner</span>
<span class="platform-badge udemy">Udemy</span>
<span class="badge badge-primary">Primary</span>

Star Rating:
<div class="star-rating">
  <span class="star filled">★</span>
  <span class="star filled">★</span>
  <span class="star empty">★</span>
  <span class="rating-text">4.5 (123 reviews)</span>
</div>

Utility Classes:
<div class="p-lg mb-md bg-surface rounded-lg shadow-md">
  <h2 class="text-primary font-semibold mb-sm">Title</h2>
  <p class="text-secondary">Content</p>
</div>

Dark Theme:
Add data-theme="dark" to html element to enable dark theme

Responsive:
Use mixins: @include mobile { ... }, @include tablet { ... }, @include desktop { ... }
Or utility classes: .d-mobile-none, .d-tablet-none, .d-desktop-none

BEST PRACTICES:

1. Use CSS custom properties for dynamic theming
2. Use mixins for reusable component styles
3. Use utility classes for quick styling
4. Follow BEM methodology for custom components
5. Use semantic color names (primary, secondary, success, etc.)
6. Maintain consistent spacing using the spacing scale
7. Use the provided shadow system for depth
8. Follow accessibility guidelines (focus states, contrast ratios)
9. Use the transition system for smooth animations
10. Test both light and dark themes

CUSTOMIZATION:

To customize the theme:
1. Modify variables in _variables.scss
2. Add new mixins in _mixins.scss
3. Create new components in _components.scss
4. Add utility classes in _utilities.scss

The theme is designed to be maintainable, scalable, and accessible.
*/
